{
  "name": "px",
  "scopeName": "source.px",
  "fileTypes": ["px"],
	"patterns": [{
      "name": "keyword.px",
      "match": "\\b(void|bool|i32|u32|i64|u64|f32|f64|str)\\b"
    }, {
      "include": "#comments"
    }, {
			"include": "#strings"
    }, {
			"include": "#keywords"
    }
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.storage.px",
				"match": "\\b(unit|let|mut|fun|type|unittest)\\b"
      }, {
        "name": "keyword.type.px",
				"match": "\\b(shared|unique|unsafe)\\b"
      }, {
        "name": "keyword.structure.px",
				"match": "\\b(scope|enum|class|trait|annot|coroutine|contract)\\b"
      }, {
        "name": "keyword.statement.px",
				"match": "@extern"
      }, {
        "name": "keyword.conditional.px",
        "match": "\\b(if|match|break|continue|pass|goto)\\b"
      }, {
        "name": "keyword.repeat.px",
        "match": "\\b(loop|for)\\b"
      }]
    },
    "comments": {
      "patterns":[{
          "name": "comment.line.documentation.px",
          "begin": "#[!/](?=[^/])",
          "end": "$"
        }, {
          "name": "comment.line.double-slash.px",
          "begin": "#",
          "end": "$"
        }
      ]
    },
		"strings": {
			"name": "string.quoted.double.px",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
					"name": "constant.character.escape.px",
					"match": "\\\\."
				}
			]
    }
  }
}